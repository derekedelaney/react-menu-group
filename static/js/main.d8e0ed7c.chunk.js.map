{"version":3,"sources":["../../dist/index.es.js","App.js","index.js"],"names":["global","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","MapShim","Map","getIndex","arr","result","some","entry","index","class_1","__entries__","defineProperty","get","enumerable","configurable","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","isBrowser","window","document","global$1","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","props","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","create","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","types","getTypes","allowedTypes","type","withContentRect","WrappedComponent","_class","_temp","_Component","subClass","superClass","WithContentRect","_len","args","Array","_key","concat","state","client","offset","scroll","bounds","margin","_animationFrameID","_resizeObserver","_node","measure","node","calculations","clientTop","clientLeft","offsetTop","offsetLeft","offsetWidth","offsetHeight","scrollTop","scrollLeft","scrollWidth","scrollHeight","getBoundingClientRect","parseInt","marginTop","marginRight","marginBottom","marginLeft","getContentRect$1","setState","onResize","_handleRef","innerRef","current","constructor","__proto__","_proto","componentDidMount","componentWillUnmount","cancelAnimationFrame","render","_this$props","excluded","sourceKeys","_objectWithoutPropertiesLoose","measureRef","propTypes","a","bool","oneOfType","object","func","Measure","_ref","children","displayName","module","classnames","hasOwn","classNames","classes","arg","argType","isArray","inner","join","exports","default","fn","css","ref","insertAt","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","styleInject","classCallCheck","instance","Constructor","createClass","defineProperties","descriptor","protoProps","staticProps","_extends$1","possibleConstructorReturn","ReferenceError","toConsumableArray","arr2","from","MenuGroup","getPrototypeOf","overflowMenus","menus","lockedMenus","menuOffset","setUpMenus","kids","component","foundMenu","find","menu","id","locked","columnLock","calculatedRef","toJSON","getAttribute","Error","prevState","dimension","calculateMenuDisplay","menuContainerDimensions","_this$state","menuSum","containerWidth","prevMenu","moreState","array","item","lockedMenu","getDisplay","_this$state2","overflowMenu","setPrototypeOf","inherits","nextProps","prevProps","onOverflowMenuChange","showMore","_props","className","isRequired","element","string","number","shape","arrayOf","defaultProps","undefined","index$1","__webpack_exports__","buttons","text","handleClick","alert","buttonProps","variant","App","counter","timer","handleOverflowMenuChange","react_default","index_es","Dropdown_default","alignRight","Toggle","Menu","Item","onClick","button","Button_default","Component","ReactDOM","App_App","getElementById"],"mappings":"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","file":"static/js/main.d8e0ed7c.chunk.js","sourcesContent":["import React, { Component, createElement } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n\n/* eslint-disable require-jsdoc, valid-jsdoc */\n\n\nvar MapShim = function () {\n  if (typeof Map !== 'undefined') {\n    return Map;\n  }\n  /**\r\n   * Returns index in provided array that matches the specified key.\r\n   *\r\n   * @param {Array<Array>} arr\r\n   * @param {*} key\r\n   * @returns {number}\r\n   */\n\n\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function (entry, index) {\n      if (entry[0] === key) {\n        result = index;\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n\n  return (\n    /** @class */\n    function () {\n      function class_1() {\n        this.__entries__ = [];\n      }\n\n      Object.defineProperty(class_1.prototype, \"size\", {\n        /**\r\n         * @returns {boolean}\r\n         */\n        get: function get() {\n          return this.__entries__.length;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      /**\r\n       * @param {*} key\r\n       * @returns {*}\r\n       */\n\n      class_1.prototype.get = function (key) {\n        var index = getIndex(this.__entries__, key);\n        var entry = this.__entries__[index];\n        return entry && entry[1];\n      };\n      /**\r\n       * @param {*} key\r\n       * @param {*} value\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.set = function (key, value) {\n        var index = getIndex(this.__entries__, key);\n\n        if (~index) {\n          this.__entries__[index][1] = value;\n        } else {\n          this.__entries__.push([key, value]);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.delete = function (key) {\n        var entries = this.__entries__;\n        var index = getIndex(entries, key);\n\n        if (~index) {\n          entries.splice(index, 1);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.has = function (key) {\n        return !!~getIndex(this.__entries__, key);\n      };\n      /**\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.clear = function () {\n        this.__entries__.splice(0);\n      };\n      /**\r\n       * @param {Function} callback\r\n       * @param {*} [ctx=null]\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.forEach = function (callback, ctx) {\n        if (ctx === void 0) {\n          ctx = null;\n        }\n\n        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\n          var entry = _a[_i];\n          callback.call(ctx, entry[1], entry[0]);\n        }\n      };\n\n      return class_1;\n    }()\n  );\n}();\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\n\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document; // Returns global object of a current environment.\n\nvar global$1 = function () {\n  if (typeof global !== 'undefined' && global.Math === Math) {\n    return global;\n  }\n\n  if (typeof self !== 'undefined' && self.Math === Math) {\n    return self;\n  }\n\n  if (typeof window !== 'undefined' && window.Math === Math) {\n    return window;\n  } // eslint-disable-next-line no-new-func\n\n\n  return Function('return this')();\n}();\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\n\n\nvar requestAnimationFrame$1 = function () {\n  if (typeof requestAnimationFrame === 'function') {\n    // It's required to use a bounded function because IE sometimes throws\n    // an \"Invalid calling object\" error if rAF is invoked without the global\n    // object on the left hand side.\n    return requestAnimationFrame.bind(global$1);\n  }\n\n  return function (callback) {\n    return setTimeout(function () {\n      return callback(Date.now());\n    }, 1000 / 60);\n  };\n}(); // Defines minimum timeout before adding a trailing call.\n\n\nvar trailingTimeout = 2;\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\n\nfunction throttle(callback, delay) {\n  var leadingCall = false,\n      trailingCall = false,\n      lastCallTime = 0;\n  /**\r\n   * Invokes the original callback function and schedules new invocation if\r\n   * the \"proxy\" was called during current request.\r\n   *\r\n   * @returns {void}\r\n   */\n\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  /**\r\n   * Callback invoked after the specified delay. It will further postpone\r\n   * invocation of the original function delegating it to the\r\n   * requestAnimationFrame.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  /**\r\n   * Schedules invocation of the original function.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function proxy() {\n    var timeStamp = Date.now();\n\n    if (leadingCall) {\n      // Reject immediately following calls.\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      } // Schedule new call to be in invoked when the pending one is resolved.\n      // This is important for \"transitions\" which never actually start\n      // immediately so there is a chance that we might miss one if change\n      // happens amids the pending invocation.\n\n\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n\n    lastCallTime = timeStamp;\n  }\n\n  return proxy;\n} // Minimum delay before invoking the update of observers.\n\n\nvar REFRESH_DELAY = 20; // A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\n\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight']; // Check if MutationObserver is available.\n\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\n\nvar ResizeObserverController =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserverController.\r\n   *\r\n   * @private\r\n   */\n  function ResizeObserverController() {\n    /**\r\n     * Indicates whether DOM listeners have been added.\r\n     *\r\n     * @private {boolean}\r\n     */\n    this.connected_ = false;\n    /**\r\n     * Tells that controller has subscribed for Mutation Events.\r\n     *\r\n     * @private {boolean}\r\n     */\n\n    this.mutationEventsAdded_ = false;\n    /**\r\n     * Keeps reference to the instance of MutationObserver.\r\n     *\r\n     * @private {MutationObserver}\r\n     */\n\n    this.mutationsObserver_ = null;\n    /**\r\n     * A list of connected observers.\r\n     *\r\n     * @private {Array<ResizeObserverSPI>}\r\n     */\n\n    this.observers_ = [];\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n  }\n  /**\r\n   * Adds observer to observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be added.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n      this.observers_.push(observer);\n    } // Add listeners if they haven't been added yet.\n\n\n    if (!this.connected_) {\n      this.connect_();\n    }\n  };\n  /**\r\n   * Removes observer from observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer); // Remove observer if it's present in registry.\n\n    if (~index) {\n      observers.splice(index, 1);\n    } // Remove listeners if controller has no connected observers.\n\n\n    if (!observers.length && this.connected_) {\n      this.disconnect_();\n    }\n  };\n  /**\r\n   * Invokes the update of observers. It will continue running updates insofar\r\n   * it detects changes.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_(); // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n\n    if (changesDetected) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Updates every observer from observers list and notifies them of queued\r\n   * entries.\r\n   *\r\n   * @private\r\n   * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n   *      dimensions of it's elements.\r\n   */\n\n\n  ResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n      return observer.gatherActive(), observer.hasActive();\n    }); // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n\n    activeObservers.forEach(function (observer) {\n      return observer.broadcastActive();\n    });\n    return activeObservers.length > 0;\n  };\n  /**\r\n   * Initializes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n      return;\n    } // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n\n\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n      this.mutationsObserver_ = new MutationObserver(this.refresh);\n      this.mutationsObserver_.observe(document, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    } else {\n      document.addEventListener('DOMSubtreeModified', this.refresh);\n      this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n  };\n  /**\r\n   * Removes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n      return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n      this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n      document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n  };\n  /**\r\n   * \"Transitionend\" event handler.\r\n   *\r\n   * @private\r\n   * @param {TransitionEvent} event\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\n    var _b = _a.propertyName,\n        propertyName = _b === void 0 ? '' : _b; // Detect whether transition may affect dimensions of an element.\n\n    var isReflowProperty = transitionKeys.some(function (key) {\n      return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Returns instance of the ResizeObserverController.\r\n   *\r\n   * @returns {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n      this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n  };\n  /**\r\n   * Holds reference to the controller's instance.\r\n   *\r\n   * @private {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.instance_ = null;\n  return ResizeObserverController;\n}();\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\n\n\nvar defineConfigurable = function defineConfigurable(target, props) {\n  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n    var key = _a[_i];\n    Object.defineProperty(target, key, {\n      value: props[key],\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n  }\n\n  return target;\n};\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\n\n\nvar getWindowOf = function getWindowOf(target) {\n  // Assume that the element is an instance of Node, which means that it\n  // has the \"ownerDocument\" property from which we can retrieve a\n  // corresponding global object.\n  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView; // Return the local global object if it's not possible extract one from\n  // provided element.\n\n  return ownerGlobal || global$1;\n}; // Placeholder of an empty content rectangle.\n\n\nvar emptyRect = createRectInit(0, 0, 0, 0);\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\n\nfunction toFloat(value) {\n  return parseFloat(value) || 0;\n}\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\n\n\nfunction getBordersSize(styles) {\n  var positions = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positions[_i - 1] = arguments[_i];\n  }\n\n  return positions.reduce(function (size, position) {\n    var value = styles['border-' + position + '-width'];\n    return size + toFloat(value);\n  }, 0);\n}\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\n\n\nfunction getPaddings(styles) {\n  var positions = ['top', 'right', 'bottom', 'left'];\n  var paddings = {};\n\n  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n    var position = positions_1[_i];\n    var value = styles['padding-' + position];\n    paddings[position] = toFloat(value);\n  }\n\n  return paddings;\n}\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getHTMLElementContentRect(target) {\n  // Client width & height properties can't be\n  // used exclusively as they provide rounded values.\n  var clientWidth = target.clientWidth,\n      clientHeight = target.clientHeight; // By this condition we can catch all non-replaced inline, hidden and\n  // detached elements. Though elements with width & height properties less\n  // than 0.5 will be discarded as well.\n  //\n  // Without it we would need to implement separate methods for each of\n  // those cases and it's not possible to perform a precise and performance\n  // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n  // gives wrong results for elements with width & height less than 0.5.\n\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom; // Computed styles of width & height are being used because they are the\n  // only dimensions available to JS that contain non-rounded values. It could\n  // be possible to utilize the getBoundingClientRect if only it's data wasn't\n  // affected by CSS transformations let alone paddings, borders and scroll bars.\n\n  var width = toFloat(styles.width),\n      height = toFloat(styles.height); // Width & height include paddings and borders when the 'border-box' box\n  // model is applied (except for IE).\n\n  if (styles.boxSizing === 'border-box') {\n    // Following conditions are required to handle Internet Explorer which\n    // doesn't include paddings and borders to computed CSS dimensions.\n    //\n    // We can say that if CSS dimensions + paddings are equal to the \"client\"\n    // properties then it's either IE, and thus we don't need to subtract\n    // anything, or an element merely doesn't have paddings/borders styles.\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, 'left', 'right') + horizPad;\n    }\n\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n    }\n  } // Following steps can't be applied to the document's root element as its\n  // client[Width/Height] properties represent viewport area of the window.\n  // Besides, it's as well not necessary as the <html> itself neither has\n  // rendered scroll bars nor it can be clipped.\n\n\n  if (!isDocumentElement(target)) {\n    // In some browsers (only in Firefox, actually) CSS width & height\n    // include scroll bars size which can be removed at this step as scroll\n    // bars are the only difference between rounded dimensions + paddings\n    // and \"client\" properties, though that is not always true in Chrome.\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight; // Chrome has a rather weird rounding of \"client\" properties.\n    // E.g. for an element with content width of 314.2px it sometimes gives\n    // the client width of 315px and for the width of 314.7px it may give\n    // 314px. And it doesn't happen all the time. So just ignore this delta\n    // as a non-relevant.\n\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nvar isSVGGraphicsElement = function () {\n  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n  // interface.\n  if (typeof SVGGraphicsElement !== 'undefined') {\n    return function (target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  } // If it's so, then check that element is at least an instance of the\n  // SVGElement and that it has the \"getBBox\" method.\n  // eslint-disable-next-line no-extra-parens\n\n\n  return function (target) {\n    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';\n  };\n}();\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n\n  return getHTMLElementContentRect(target);\n}\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\n\n\nfunction createReadOnlyRect(_a) {\n  var x = _a.x,\n      y = _a.y,\n      width = _a.width,\n      height = _a.height; // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n\n  var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype); // Rectangle's properties are not writable and non-enumerable.\n\n  defineConfigurable(rect, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x\n  });\n  return rect;\n}\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction createRectInit(x, y, width, height) {\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\n\n\nvar ResizeObservation =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObservation.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   */\n  function ResizeObservation(target) {\n    /**\r\n     * Broadcasted width of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n    this.broadcastWidth = 0;\n    /**\r\n     * Broadcasted height of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n\n    this.broadcastHeight = 0;\n    /**\r\n     * Reference to the last observed content rectangle.\r\n     *\r\n     * @private {DOMRectInit}\r\n     */\n\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n    this.target = target;\n  }\n  /**\r\n   * Updates content rectangle and tells whether it's width or height properties\r\n   * have changed since the last broadcast.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n    this.contentRect_ = rect;\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n  };\n  /**\r\n   * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n   * from the corresponding properties of the last observed content rectangle.\r\n   *\r\n   * @returns {DOMRectInit} Last observed content rectangle.\r\n   */\n\n\n  ResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n    return rect;\n  };\n\n  return ResizeObservation;\n}();\n\nvar ResizeObserverEntry =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObserverEntry.\r\n   *\r\n   * @param {Element} target - Element that is being observed.\r\n   * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n   */\n  function ResizeObserverEntry(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit); // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n\n    defineConfigurable(this, {\n      target: target,\n      contentRect: contentRect\n    });\n  }\n\n  return ResizeObserverEntry;\n}();\n\nvar ResizeObserverSPI =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n   *      when one of the observed elements changes it's content dimensions.\r\n   * @param {ResizeObserverController} controller - Controller instance which\r\n   *      is responsible for the updates of observer.\r\n   * @param {ResizeObserver} callbackCtx - Reference to the public\r\n   *      ResizeObserver instance which will be passed to callback function.\r\n   */\n  function ResizeObserverSPI(callback, controller, callbackCtx) {\n    /**\r\n     * Collection of resize observations that have detected changes in dimensions\r\n     * of elements.\r\n     *\r\n     * @private {Array<ResizeObservation>}\r\n     */\n    this.activeObservations_ = [];\n    /**\r\n     * Registry of the ResizeObservation instances.\r\n     *\r\n     * @private {Map<Element, ResizeObservation>}\r\n     */\n\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n  }\n  /**\r\n   * Starts observing provided element.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is already being observed.\n\n    if (observations.has(target)) {\n      return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n    this.controller_.addObserver(this); // Force the update of observations.\n\n    this.controller_.refresh();\n  };\n  /**\r\n   * Stops observing provided element.\r\n   *\r\n   * @param {Element} target - Element to stop observing.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is not being observed.\n\n    if (!observations.has(target)) {\n      return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n      this.controller_.removeObserver(this);\n    }\n  };\n  /**\r\n   * Stops observing all elements.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n  };\n  /**\r\n   * Collects observation instances the associated element of which has changed\r\n   * it's content rectangle.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.gatherActive = function () {\n    var _this = this;\n\n    this.clearActive();\n    this.observations_.forEach(function (observation) {\n      if (observation.isActive()) {\n        _this.activeObservations_.push(observation);\n      }\n    });\n  };\n  /**\r\n   * Invokes initial callback function with a list of ResizeObserverEntry\r\n   * instances collected from active resize observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n      return;\n    }\n\n    var ctx = this.callbackCtx_; // Create ResizeObserverEntry instance for every active observation.\n\n    var entries = this.activeObservations_.map(function (observation) {\n      return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n  };\n  /**\r\n   * Clears the collection of active observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n  };\n  /**\r\n   * Tells whether observer has active observations.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n  };\n\n  return ResizeObserverSPI;\n}(); // Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\n\n\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\n\nvar ResizeObserver =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n   *      dimensions of the observed elements change.\r\n   */\n  function ResizeObserver(callback) {\n    if (!(this instanceof ResizeObserver)) {\n      throw new TypeError('Cannot call a class as a function.');\n    }\n\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n    observers.set(this, observer);\n  }\n\n  return ResizeObserver;\n}(); // Expose public methods of ResizeObserver.\n\n\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n  ResizeObserver.prototype[method] = function () {\n    var _a;\n\n    return (_a = observers.get(this))[method].apply(_a, arguments);\n  };\n});\n\nvar index = function () {\n  // Export existing implementation if available.\n  if (typeof global$1.ResizeObserver !== 'undefined') {\n    return global$1.ResizeObserver;\n  }\n\n  return ResizeObserver;\n}();\n\nvar types = ['client', 'offset', 'scroll', 'bounds', 'margin'];\n\nfunction getTypes(props) {\n  var allowedTypes = [];\n  types.forEach(function (type) {\n    if (props[type]) {\n      allowedTypes.push(type);\n    }\n  });\n  return allowedTypes;\n}\n\nfunction getContentRect$1(node, types) {\n  var calculations = {};\n\n  if (types.indexOf('client') > -1) {\n    calculations.client = {\n      top: node.clientTop,\n      left: node.clientLeft,\n      width: node.clientWidth,\n      height: node.clientHeight\n    };\n  }\n\n  if (types.indexOf('offset') > -1) {\n    calculations.offset = {\n      top: node.offsetTop,\n      left: node.offsetLeft,\n      width: node.offsetWidth,\n      height: node.offsetHeight\n    };\n  }\n\n  if (types.indexOf('scroll') > -1) {\n    calculations.scroll = {\n      top: node.scrollTop,\n      left: node.scrollLeft,\n      width: node.scrollWidth,\n      height: node.scrollHeight\n    };\n  }\n\n  if (types.indexOf('bounds') > -1) {\n    var rect = node.getBoundingClientRect();\n    calculations.bounds = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height\n    };\n  }\n\n  if (types.indexOf('margin') > -1) {\n    var styles = getComputedStyle(node);\n    calculations.margin = {\n      top: styles ? parseInt(styles.marginTop) : 0,\n      right: styles ? parseInt(styles.marginRight) : 0,\n      bottom: styles ? parseInt(styles.marginBottom) : 0,\n      left: styles ? parseInt(styles.marginLeft) : 0\n    };\n  }\n\n  return calculations;\n}\n\nfunction withContentRect(types) {\n  return function (WrappedComponent) {\n    var _class, _temp;\n\n    return _temp = _class =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(WithContentRect, _Component);\n\n      function WithContentRect() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n        _this.state = {\n          contentRect: {\n            entry: {},\n            client: {},\n            offset: {},\n            scroll: {},\n            bounds: {},\n            margin: {}\n          }\n        };\n        _this._animationFrameID = null;\n        _this._resizeObserver = null;\n        _this._node = null;\n\n        _this.measure = function (entries) {\n          var contentRect = getContentRect$1(_this._node, types || getTypes(_this.props));\n\n          if (entries) {\n            contentRect.entry = entries[0].contentRect;\n          }\n\n          _this._animationFrameID = window.requestAnimationFrame(function () {\n            if (_this._resizeObserver !== null) {\n              _this.setState({\n                contentRect: contentRect\n              });\n            }\n          });\n\n          if (typeof _this.props.onResize === 'function') {\n            _this.props.onResize(contentRect);\n          }\n        };\n\n        _this._handleRef = function (node) {\n          if (_this._resizeObserver !== null && _this._node !== null) {\n            _this._resizeObserver.unobserve(_this._node);\n          }\n\n          _this._node = node;\n\n          if (_this._resizeObserver !== null && _this._node !== null) {\n            _this._resizeObserver.observe(_this._node);\n          }\n\n          var innerRef = _this.props.innerRef;\n\n          if (innerRef) {\n            if (typeof innerRef === 'function') {\n              innerRef(_this._node);\n            } else {\n              innerRef.current = _this._node;\n            }\n          }\n        };\n\n        return _this;\n      }\n\n      var _proto = WithContentRect.prototype;\n\n      _proto.componentDidMount = function componentDidMount() {\n        this._resizeObserver = new index(this.measure);\n\n        if (this._node !== null) {\n          this._resizeObserver.observe(this._node);\n        }\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        if (this._resizeObserver !== null) {\n          this._resizeObserver.disconnect();\n\n          this._resizeObserver = null;\n        }\n\n        window.cancelAnimationFrame(this._animationFrameID);\n      };\n\n      _proto.render = function render() {\n        var _this$props = this.props,\n            innerRef = _this$props.innerRef,\n            onResize = _this$props.onResize,\n            props = _objectWithoutPropertiesLoose(_this$props, [\"innerRef\", \"onResize\"]);\n\n        return createElement(WrappedComponent, _extends({}, props, {\n          measureRef: this._handleRef,\n          measure: this.measure,\n          contentRect: this.state.contentRect\n        }));\n      };\n\n      return WithContentRect;\n    }(Component), _class.propTypes = {\n      client: PropTypes.bool,\n      offset: PropTypes.bool,\n      scroll: PropTypes.bool,\n      bounds: PropTypes.bool,\n      margin: PropTypes.bool,\n      innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n      onResize: PropTypes.func\n    }, _temp;\n  };\n}\n\nvar Measure = withContentRect()(function (_ref) {\n  var measure = _ref.measure,\n      measureRef = _ref.measureRef,\n      contentRect = _ref.contentRect,\n      children = _ref.children;\n  return children({\n    measure: measure,\n    measureRef: measureRef,\n    contentRect: contentRect\n  });\n});\nMeasure.displayName = 'Measure';\nMeasure.propTypes.children = PropTypes.func;\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar classnames = createCommonjsModule(function (module) {\n  /*!\n    Copyright (c) 2017 Jed Watson.\n    Licensed under the MIT License (MIT), see\n    http://jedwatson.github.io/classnames\n  */\n\n  /* global define */\n  (function () {\n    var hasOwn = {}.hasOwnProperty;\n\n    function classNames() {\n      var classes = [];\n\n      for (var i = 0; i < arguments.length; i++) {\n        var arg = arguments[i];\n        if (!arg) continue;\n        var argType = typeof arg;\n\n        if (argType === 'string' || argType === 'number') {\n          classes.push(arg);\n        } else if (Array.isArray(arg) && arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        } else if (argType === 'object') {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        }\n      }\n\n      return classes.join(' ');\n    }\n\n    if (module.exports) {\n      classNames.default = classNames;\n      module.exports = classNames;\n    } else {\n      window.classNames = classNames;\n    }\n  })();\n});\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \".styles_menuGroupContainer__3Mzvq {\\n    width: 100%;\\n    display: flex;\\n}\\n\";\nvar styles = {\n  \"menuGroupContainer\": \"styles_menuGroupContainer__3Mzvq\"\n};\nstyleInject(css);\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends$1 = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar toConsumableArray = function toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar MenuGroup = function (_Component) {\n  inherits(MenuGroup, _Component);\n\n  function MenuGroup() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, MenuGroup);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = MenuGroup.__proto__ || Object.getPrototypeOf(MenuGroup)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      overflowMenus: [],\n      menus: [],\n      lockedMenus: [],\n      menuOffset: _this.props.menuOffset\n    }, _this.setUpMenus = function (children) {\n      var kids = children({\n        innerRef: _this.innerRef\n      }) || [];\n      var menus = [];\n      kids.forEach(function (component, index) {\n        var foundMenu = _this.state.menus.find(function (menu) {\n          return menu.id === component.key;\n        });\n\n        var locked = Array.isArray(_this.props.columnLock) ? _this.props.columnLock.indexOf(index) > -1 : false;\n\n        if (foundMenu) {\n          menus.push(_extends$1({}, foundMenu, {\n            component: component,\n            locked: locked\n          }));\n        } else {\n          menus.push({\n            id: component.key,\n            component: component,\n            locked: locked\n          });\n        }\n      });\n\n      _this.setState({\n        menus: menus\n      });\n    }, _this.innerRef = function (ref) {\n      if (ref) {\n        var calculatedRef = ref.getBoundingClientRect().toJSON();\n        var id = ref.getAttribute('id');\n\n        if (id) {\n          _this.setState(function (prevState) {\n            var menus = prevState.menus.map(function (menu) {\n              if (menu.id === id) {\n                menu.dimension = calculatedRef;\n              }\n\n              return menu;\n            });\n            return {\n              menus: menus\n            };\n          });\n        } else {\n          throw new Error(\"No 'id' found on element with innerRef\");\n        }\n      }\n    }, _this.calculateMenuDisplay = function (menuContainerDimensions) {\n      var _this$state = _this.state,\n          menus = _this$state.menus,\n          menuOffset = _this$state.menuOffset;\n      var menuSum = 0;\n      menus.forEach(function (menu) {\n        if (menu.dimension) {\n          menuSum += menu.dimension.width;\n          var containerWidth = menuContainerDimensions.width - menuOffset;\n\n          if (menuSum > containerWidth) {\n            _this.setState(function (prevState) {\n              if (!menu.locked && !prevState.overflowMenus.find(function (prevMenu) {\n                return prevMenu.id === menu.id;\n              })) {\n                return {\n                  overflowMenus: [menu].concat(toConsumableArray(prevState.overflowMenus))\n                };\n              }\n\n              if (menu.locked && !prevState.lockedMenus.find(function (prevMenu) {\n                return prevMenu.id === menu.id;\n              })) {\n                return {\n                  lockedMenus: [menu].concat(toConsumableArray(prevState.lockedMenus)),\n                  menuOffset: prevState.menuOffset + menu.dimension.width\n                };\n              }\n            });\n          } else {\n            _this.setState(function (prevState) {\n              var moreState = {};\n              var array = prevState.overflowMenus.filter(function (item) {\n                return item.id !== menu.id;\n              });\n              var lockedMenu = prevState.lockedMenus.find(function (item) {\n                return item.id === menu.id;\n              });\n\n              if (lockedMenu) {\n                moreState.menuOffset = prevState.menuOffset - lockedMenu.dimension.width;\n                moreState.lockedMenus = prevState.lockedMenus.filter(function (item) {\n                  return item.id !== menu.id;\n                });\n              }\n\n              return _extends$1({\n                overflowMenus: array\n              }, moreState);\n            });\n          }\n        } else {\n          throw new Error(\"'id' and 'key' do not match\");\n        }\n      });\n    }, _this.getDisplay = function () {\n      var _this$state2 = _this.state,\n          menus = _this$state2.menus,\n          overflowMenus = _this$state2.overflowMenus;\n      return menus.filter(function (menu) {\n        return !overflowMenus.find(function (overflowMenu) {\n          return overflowMenu.id === menu.id;\n        });\n      }).map(function (menu) {\n        return menu.component;\n      });\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(MenuGroup, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.setUpMenus(this.props.children);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var children = nextProps.children,\n          bounds = nextProps.contentRect.bounds;\n      this.setUpMenus(children);\n      this.calculateMenuDisplay(bounds);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.overflowMenus.length !== prevState.overflowMenus.length) {\n        var keys = this.state.overflowMenus.map(function (item) {\n          return item.id;\n        });\n        this.props.onOverflowMenuChange(keys);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var showMore = this.state.overflowMenus.length > 0;\n      var _props = this.props,\n          overflowMenu = _props.overflowMenu,\n          measureRef = _props.measureRef,\n          className = _props.className;\n      return React.createElement('div', {\n        ref: measureRef,\n        className: classnames(styles.menuGroupContainer, className)\n      }, this.getDisplay(), showMore && overflowMenu);\n    }\n  }]);\n  return MenuGroup;\n}(Component);\n\nMenuGroup.propTypes = {\n  children: PropTypes.func.isRequired,\n  onOverflowMenuChange: PropTypes.func,\n  overflowMenu: PropTypes.element,\n  menuOffset: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  measureRef: PropTypes.func.isRequired,\n  contentRect: PropTypes.shape({}).isRequired,\n  className: PropTypes.string,\n  columnLock: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n};\nMenuGroup.defaultProps = {\n  onOverflowMenuChange: function onOverflowMenuChange() {},\n  overflowMenu: undefined,\n  menuOffset: 0,\n  className: '',\n  columnLock: null\n};\nvar index$1 = withContentRect('bounds')(MenuGroup);\nexport default index$1;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport './index.css';\n\nimport MenuGroup from 'react-menu-group';\n\nconst buttons = [\n    {\n        key: '0',\n        text: 'BUTTON 1',\n        handleClick: () => {\n            alert('clicked button 1');\n        },\n        buttonProps: {\n            variant: 'primary',\n        },\n    },\n    {\n        key: '1',\n        text: 'BUTTON 2',\n        handleClick: () => {\n            alert('clicked button 2');\n        },\n        buttonProps: {\n            variant: 'success',\n        },\n    },\n    {\n        key: '2',\n        text: 'BUTTON 3',\n        handleClick: () => {\n            alert('clicked button 3');\n        },\n        buttonProps: {\n            variant: 'secondary',\n        },\n    },\n    {\n        key: '3',\n        text: 'BUTTON 4',\n        handleClick: () => {\n            alert('clicked button 4');\n        },\n        buttonProps: {\n            variant: 'secondary',\n        },\n    },\n    {\n        key: '4',\n        text: 'BUTTON 5',\n        handleClick: () => {\n            alert('clicked button 5');\n        },\n        buttonProps: {\n            variant: 'secondary',\n        },\n    },\n    {\n        key: '5',\n        text: 'BUTTON 6',\n        handleClick: () => {\n            alert('clicked button 6');\n        },\n        buttonProps: {\n            variant: 'danger',\n        },\n    },\n    {\n        key: '6',\n        text: 'BUTTON 7',\n        handleClick: () => {\n            alert('clicked button 7');\n        },\n        buttonProps: {\n            variant: 'secondary',\n        },\n    },\n    {\n        key: '7',\n        text: 'BUTTON 8',\n        handleClick: () => {\n            alert('clicked button 8');\n        },\n        buttonProps: {\n            variant: 'secondary',\n        },\n    },\n];\n\nconst overflowComponent = keys => (\n    <Dropdown className=\"button\" alignRight>\n        <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\n            More\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n            {keys.map((key, i) => (\n                <Dropdown.Item key={i} onClick={() => {\n                    alert(`clicked ${buttons.find(button => button.key === key).text}`);\n                }}>\n                    {buttons.find(button => button.key === key).text}\n                </Dropdown.Item>\n            ))}\n        </Dropdown.Menu>\n    </Dropdown>\n);\n\nexport default class App extends Component {\n    state = {\n        keys: [],\n        counter: 0,\n        timer: null,\n        menuOffset: 0,\n    };\n\n    handleOverflowMenuChange = keys => {\n        this.setState({ keys });\n    };\n\n    render() {\n        return (\n            <div className=\"demo\">\n                <MenuGroup\n                    overflowMenu={overflowComponent(this.state.keys)}\n                    onOverflowMenuChange={this.handleOverflowMenuChange}\n                    menuOffset={105}\n                    columnLock={[1, 5]}\n                >\n                    {({ innerRef }) =>\n                        buttons.map(button => (\n                            <div\n                                id={button.key}\n                                key={button.key}\n                                ref={innerRef}\n                                className=\"button\"\n                            >\n                                <Button\n                                    {...button.buttonProps}\n                                    onClick={button.handleClick}\n                                >\n                                    {button.text}\n                                </Button>\n                            </div>\n                        ))\n                    }\n                </MenuGroup>\n            </div>\n        );\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}